using System;
using System.IO;
using System.Reflection;

using PenPen.Expressions;

namespace PenPen
{
	class Writer : IDisposable
	{
		readonly string spacename;
		readonly TextWriter writer;
		readonly Grammar grammar;

		internal Writer(TextWriter writer, Grammar grammar, string spacename)
		{
			this.writer = writer;
			this.grammar = grammar;
			this.spacename = spacename;
		}

		internal void Write()
		{
			WriteHeader();
			WriteParser();
		}

		void WriteHeader()
		{
			var version = Assembly.GetExecutingAssembly().GetName().Version;
			writer.WriteLine("// Generated by PenPen {0} at {1}", version, DateTime.Now);
		}

		void WriteParser()
		{
			var location = Assembly.GetExecutingAssembly().Location;
			var path = Path.Combine(Path.GetDirectoryName(location), @"./Template.cs");
			var template = File.ReadAllText(path)
				.Replace("\t{", "\t{{")
				.Replace("\t}", "\t}}");
			var name = string.Format("start\r\nnamespace {0}\r\n{{", spacename);
			var parser = string.Format(template, name, grammar.GenerateParse(), grammar.Generate(), "end\r\n}");

			writer.WriteLine(parser);
		}

		public void Dispose()
		{
			writer.Dispose();
		}
	}
}
